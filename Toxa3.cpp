// Toxa3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include<stdio.h>
#include<sys/time.h>
#define N 100
double A[N][N], F[N], mf, X[N], X1[N], S[N], msf;
main()
{
	int i, j;
	long int dt;
	double t, e;
	struct timeval tv1, tv2;
	/* Генерация данных. Здесь задается матрица с
	элементами равными 1,
	 * по диагонали равными 2. Матрица берется хорошо
	обусловленной.
	 * При правой части равной N+1 все корни будут равными
	1. */
	mf = 0;
	for (i = 0; i < N; i++)
	{
		for (j = 0; j < N; j++)
			(i == j) ? (A[i][j] = 2) : (A[i][j] = 1);
		F[i] = N + 1;
		/* Сразу вычисляем сумму квадратов элементов вектора
		F,
		 * т.е. подкоренное выражение формулы (4). */
		mf += F[i] * F[i];
	}
	/* Задаем шаг t и e. */
	t = 0.01;
	e = 0.00001;
	/* Задаем начальное приближение корней. В Х1 хранятся
	значения корней
	* к+1-й итерации. */
	for (i = 0; i < N; i++)
		X1[i] = 0.6;
	/* Засекаем время начала вычислений. */
	gettimeofday(&tv1, NULL);
	do
	{
		for (i = 0; i < N; i++)
			/* В Х хранятся значения корней к-й итерации. */
			X[i] = X1[i];
		for (msf = 0, i = 0; i < N; i++)
		{
			for (S[i] = 0, j = 0; j < N; j++)
				S[i] += A[i][j] * X[j];
			X1[i] = X[i] - t * (S[i] - F[i]);
			/* Вычисляем сумму квадратов элементов невязки, т.е.
			подкоренное
			* выражение числителя формулы (4). */
			msf += (S[i] – F[i]) * (S[i] – F[i]);
		}
	} while (msf / mf > e * e); /* Проверка условия по
   формуле (3). */
   /* Засекаем время конца вычислений. */
	gettimeofday(&tv2, NULL);
	dt = (tv2.tv_sec - tv1.tv_sec) * 1000000 +
		tv2.tv_usec - tv1.tv_usec;
	/* Выводим на экран время вычислений в секундах */
	printf(" Time= %d\n", dt);
	/* Для контроля выводим 4-е первых корня */
	for (i = 0; i < 4; i++)
		printf(" %f\n", X[i]);
	return(0);
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
